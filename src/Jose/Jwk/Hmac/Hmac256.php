<?php

declare(strict_types=1);

namespace IdentityLayer\Jose\Jwk\Hmac;

use IdentityLayer\Jose\AlgorithmFamily;
use IdentityLayer\Jose\AlgorithmName;
use IdentityLayer\Jose\Exception\InvalidAlgorithmException;
use IdentityLayer\Jose\Exception\InvalidArgumentException;

final class Hmac256 extends HmacKeyAbstract
{
    protected function __construct(string $kid, string $key)
    {
        if (strlen($key) < 32) {
            throw new InvalidArgumentException('HMAC key must be at least 256bits');
        }

        parent::__construct($kid, $key);
    }

    public function sign(AlgorithmName $algorithmName, string $message): string
    {
        if (!$algorithmName->equals(AlgorithmName::HS256())) {
            throw new InvalidAlgorithmException(
                sprintf(
                    'Must use HMAC256 algorithm',
                )
            );
        }

        return parent::sign($algorithmName, $message); // TODO: Change the autogenerated stub
    }

    public function verify(AlgorithmName $algorithmName, string $message, string $signature): bool
    {
        if (!$algorithmName->equals(AlgorithmName::HS256())) {
            throw new InvalidAlgorithmException(
                sprintf(
                    'Must use HMAC256 algorithm',
                )
            );
        }

        return parent::verify($algorithmName, $message, $signature); // TODO: Change the autogenerated stub
    }
}